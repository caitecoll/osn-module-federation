{"version":3,"file":"static/js/512.2fac86d6.chunk.js","mappings":"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","sources":["services/AnimalService.ts","AnimalList.tsx","Button.tsx","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","FormContent.tsx","FormWrapper.tsx","App.tsx","bootstrap.tsx","../node_modules/@mui/material/Typography/Typography.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js"],"sourcesContent":["export async function getAnimals() {\n  const response = await fetch(\"http://localhost:4000/animals\");\n  return await response.json();\n}\n","import { FC, useEffect, useState } from \"react\";\nimport { getAnimals } from \"./services/AnimalService\";\n\nconst AnimalList: FC = () => {\n  const [animalList, setAnimalList] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function getData() {\n      setAnimalList(await getAnimals());\n    }\n    getData();\n  }, []);\n\n  return (\n    <ul>\n      {animalList.map((animal) => (\n        <li>\n          <b>Name:</b> {animal.name}\n          <br />\n          <b>Type: </b> {animal.type}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default AnimalList;\n","import MUIButton, { ButtonProps } from \"@mui/material/Button\";\n\nconst Button = ({ color }: { color: ButtonProps[\"color\"] }) => (\n  <MUIButton color={color}>Service B - MUI5</MUIButton>\n);\n\nexport default Button;\n","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import { FormControl, InputLabel, TextField } from \"@mui/material\";\nimport MUIButton from \"@mui/material/Button\";\nimport { Field, FieldProps, Form, useFormikContext } from \"formik\";\n\nconst FormContent = () => {\n  const { setFieldValue } = useFormikContext();\n\n  const handleSetAgeClick = () => setFieldValue(\"age\", 35);\n\n  return (\n    <Form>\n      <FormControl fullWidth>\n        <Field name=\"name\">\n          {({ field }: FieldProps) => (\n            <>\n              <InputLabel htmlFor=\"name\">Name</InputLabel>\n              <TextField id=\"name\" variant=\"outlined\" autoFocus {...field} />\n            </>\n          )}\n        </Field>\n      </FormControl>\n      <MUIButton type=\"button\" onClick={handleSetAgeClick}>\n        Set age\n      </MUIButton>\n      <FormControl>\n        <Field name=\"age\">\n          {({ field }: FieldProps) => (\n            <>\n              <InputLabel htmlFor=\"age\">Age</InputLabel>\n              <TextField id=\"age\" variant=\"outlined\" {...field} />\n            </>\n          )}\n        </Field>\n      </FormControl>\n\n      <MUIButton>Submit</MUIButton>\n    </Form>\n  );\n};\n\nexport default FormContent;\n","import Typography from \"@mui/material/Typography\";\nimport { Formik } from \"formik\";\nimport FormContent from \"./FormContent\";\n\nconst FormWrapper = () => {\n  const handleSubmit = () => alert(\"Form submitted\");\n\n  return (\n    <>\n      <Typography>Service B Form using Formik 2 & MUI5</Typography>\n      <Formik initialValues={{ name: \"\" }} onSubmit={handleSubmit}>\n        <FormContent />\n      </Formik>\n    </>\n  );\n};\n\nexport default FormWrapper;\n","import Typography from \"@mui/material/Typography\";\nimport AnimalList from \"./AnimalList\";\nimport LocalButton from \"./Button\";\nimport FormWrapper from \"./FormWrapper\";\n\nconst App = () => (\n  <div>\n    <Typography variant=\"h4\">Basic Host-Remote</Typography>\n    <Typography variant=\"h5\">Service B</Typography>\n    <LocalButton color=\"primary\" />\n    <FormWrapper />\n    <AnimalList />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport { propToStyleFunction } from '../getThemeValue';\n\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  Object.keys(props).forEach(prop => {\n    if (propToStyleFunction[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\n\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}"],"names":["getAnimals","fetch","response","json","useState","animalList","setAnimalList","useEffect","getData","map","animal","name","type","color","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","defineProperty","getOwnPropertyDescriptors","defineProperties","setFieldValue","useFormikContext","Form","FormControl","fullWidth","Field","field","InputLabel","htmlFor","TextField","id","variant","autoFocus","onClick","Typography","Formik","initialValues","onSubmit","alert","ReactDOM","document","getElementById","_excluded","TypographyRoot","styled","slot","overridesResolver","props","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","getTypographyUtilityClass","useUtilityClasses","_jsx","as","clsx","generateUtilityClass","typographyClasses","generateUtilityClasses","finalSx","inSx","sx","result","systemProps","otherProps","prop","propToStyleFunction","splitProps","Array","isArray","isPlainObject"],"sourceRoot":""}