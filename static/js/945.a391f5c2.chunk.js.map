{"version":3,"file":"static/js/945.a391f5c2.chunk.js","mappings":"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","sources":["../node_modules/@mui/system/esm/styleFunctionSx/extendSxProp.js","../node_modules/@mui/material/Typography/typographyClasses.js","../node_modules/@mui/material/Typography/Typography.js","services/AnimalService.ts","AnimalList.tsx","Button.tsx","App.tsx","bootstrap.tsx","../node_modules/@mui/system/esm/getThemeValue.js","../node_modules/@mui/utils/esm/deepmerge.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"sx\"];\nimport { isPlainObject } from '@mui/utils';\nimport { propToStyleFunction } from '../getThemeValue';\n\nconst splitProps = props => {\n  const result = {\n    systemProps: {},\n    otherProps: {}\n  };\n  Object.keys(props).forEach(prop => {\n    if (propToStyleFunction[prop]) {\n      result.systemProps[prop] = props[prop];\n    } else {\n      result.otherProps[prop] = props[prop];\n    }\n  });\n  return result;\n};\n\nexport default function extendSxProp(props) {\n  const {\n    sx: inSx\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const {\n    systemProps,\n    otherProps\n  } = splitProps(other);\n  let finalSx;\n\n  if (Array.isArray(inSx)) {\n    finalSx = [systemProps, ...inSx];\n  } else if (typeof inSx === 'function') {\n    finalSx = (...args) => {\n      const result = inSx(...args);\n\n      if (!isPlainObject(result)) {\n        return systemProps;\n      }\n\n      return _extends({}, systemProps, result);\n    };\n  } else {\n    finalSx = _extends({}, systemProps, inSx);\n  }\n\n  return _extends({}, otherProps, {\n    sx: finalSx\n  });\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","export async function getAnimals() {\n  const response = await fetch(\"http://localhost:4000/animals\");\n  return await response.json();\n}\n","import { FC, useEffect, useState } from \"react\";\nimport { getAnimals } from \"./services/AnimalService\";\n\nconst AnimalList: FC = () => {\n  const [animalList, setAnimalList] = useState<any[]>([]);\n\n  useEffect(() => {\n    async function getData() {\n      setAnimalList(await getAnimals());\n    }\n\n    getData();\n  }, []);\n\n  return (\n    <ul>\n      {animalList.map((animal) => (\n        <li>\n          <b>Name:</b> {animal.name}\n          <br />\n          <b>Type: </b> {animal.type}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default AnimalList;\n","import MUIButton from \"@mui/material/Button\";\n\nconst Button = () => <MUIButton>Service B Button</MUIButton>;\n\nexport default Button;\n","import Typography from \"@mui/material/Typography\";\nimport AnimalList from \"./AnimalList\";\nimport LocalButton from \"./Button\";\n\nconst App = () => (\n  <div>\n    <Typography variant=\"h4\">Basic Host-Remote</Typography>\n    <Typography variant=\"h5\">Service B</Typography>\n    <LocalButton />\n    <AnimalList />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import borders from './borders';\nimport display from './display';\nimport flexbox from './flexbox';\nimport grid from './grid';\nimport positions from './positions';\nimport palette from './palette';\nimport shadows from './shadows';\nimport sizing from './sizing';\nimport spacing from './spacing';\nimport typography from './typography';\nconst filterPropsMapping = {\n  borders: borders.filterProps,\n  display: display.filterProps,\n  flexbox: flexbox.filterProps,\n  grid: grid.filterProps,\n  positions: positions.filterProps,\n  palette: palette.filterProps,\n  shadows: shadows.filterProps,\n  sizing: sizing.filterProps,\n  spacing: spacing.filterProps,\n  typography: typography.filterProps\n};\nexport const styleFunctionMapping = {\n  borders,\n  display,\n  flexbox,\n  grid,\n  positions,\n  palette,\n  shadows,\n  sizing,\n  spacing,\n  typography\n};\nexport const propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName) => {\n  filterPropsMapping[styleFnName].forEach(propName => {\n    acc[propName] = styleFunctionMapping[styleFnName];\n  });\n  return acc;\n}, {});\n\nfunction getThemeValue(prop, value, theme) {\n  const inputProps = {\n    [prop]: value,\n    theme\n  };\n  const styleFunction = propToStyleFunction[prop];\n  return styleFunction ? styleFunction(inputProps) : {\n    [prop]: value\n  };\n}\n\nexport default getThemeValue;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\nexport default function deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? _extends({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}"],"names":["_excluded","extendSxProp","props","finalSx","inSx","sx","result","systemProps","otherProps","Object","keys","forEach","prop","propToStyleFunction","splitProps","_objectWithoutPropertiesLoose","Array","isArray","isPlainObject","_extends","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","TypographyRoot","styled","name","overridesResolver","styles","ownerState","root","variant","align","capitalize","noWrap","gutterBottom","paragraph","theme","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","React","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","className","component","variantMapping","other","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","getAnimals","fetch","response","json","useState","animalList","setAnimalList","useEffect","getData","map","animal","type","ReactDOM","document","getElementById","filterPropsMapping","borders","display","flexbox","grid","positions","palette","shadows","sizing","spacing","styleFunctionMapping","reduce","acc","styleFnName","propName","item","constructor","deepmerge","target","source","options","clone","output","key"],"sourceRoot":""}