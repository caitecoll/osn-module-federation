{"version":3,"file":"static/js/272.8cbf36f3.chunk.js","mappings":"yIAIA,UAFe,kBAAM,SAAC,IAAD,iC,6JCQfA,EAAqB,CACzBC,QAASA,EAAAA,GAAAA,YACTC,QAASA,EAAAA,GAAAA,YACTC,QAASA,EAAAA,GAAAA,YACTC,KAAMA,EAAAA,GAAAA,YACNC,UAAWA,EAAAA,GAAAA,YACXC,QAASA,EAAAA,GAAAA,YACTC,QAASA,EAAAA,EAAAA,YACTC,OAAQA,EAAAA,GAAAA,YACRC,QAASA,EAAAA,GAAAA,YACTC,WAAYA,EAAAA,GAAAA,aAEDC,EAAuB,CAClCV,QAAAA,EAAAA,GACAC,QAAAA,EAAAA,GACAC,QAAAA,EAAAA,GACAC,KAAAA,EAAAA,GACAC,UAAAA,EAAAA,GACAC,QAAAA,EAAAA,GACAC,QAAAA,EAAAA,EACAC,OAAAA,EAAAA,GACAC,QAAAA,EAAAA,GACAC,WAAAA,EAAAA,IAEiCE,OAAOC,KAAKb,GAAoBc,QAAO,SAACC,EAAKC,GAI9E,OAHAhB,EAAmBgB,GAAaC,SAAQ,SAAAC,GACtCH,EAAIG,GAAYP,EAAqBK,MAEhCD,IACN,K,mECtCI,SAASI,EAAcC,GAC5B,OAAgB,OAATA,GAAiC,kBAATA,GAAqBA,EAAKC,cAAgBT,OAE5D,SAASU,EAAUC,EAAQC,GAEvC,IAF+CC,EAE/C,uDAFyD,CAC1DC,OAAO,GAEDC,EAASF,EAAQC,OAAQE,EAAAA,EAAAA,GAAS,GAAIL,GAAUA,EAkBtD,OAhBIJ,EAAcI,IAAWJ,EAAcK,IACzCZ,OAAOC,KAAKW,GAAQP,SAAQ,SAAAY,GAEd,cAARA,IAIAV,EAAcK,EAAOK,KAASA,KAAON,GAAUJ,EAAcI,EAAOM,IAEtEF,EAAOE,GAAOP,EAAUC,EAAOM,GAAML,EAAOK,GAAMJ,GAElDE,EAAOE,GAAOL,EAAOK,OAKpBF","sources":["Button.tsx","../node_modules/@mui/system/esm/getThemeValue.js","../node_modules/@mui/utils/esm/deepmerge.js"],"sourcesContent":["import MUIButton from \"@mui/material/Button\";\n\nconst Button = () => <MUIButton>Service B Button</MUIButton>;\n\nexport default Button;\n","import borders from './borders';\nimport display from './display';\nimport flexbox from './flexbox';\nimport grid from './grid';\nimport positions from './positions';\nimport palette from './palette';\nimport shadows from './shadows';\nimport sizing from './sizing';\nimport spacing from './spacing';\nimport typography from './typography';\nconst filterPropsMapping = {\n  borders: borders.filterProps,\n  display: display.filterProps,\n  flexbox: flexbox.filterProps,\n  grid: grid.filterProps,\n  positions: positions.filterProps,\n  palette: palette.filterProps,\n  shadows: shadows.filterProps,\n  sizing: sizing.filterProps,\n  spacing: spacing.filterProps,\n  typography: typography.filterProps\n};\nexport const styleFunctionMapping = {\n  borders,\n  display,\n  flexbox,\n  grid,\n  positions,\n  palette,\n  shadows,\n  sizing,\n  spacing,\n  typography\n};\nexport const propToStyleFunction = Object.keys(filterPropsMapping).reduce((acc, styleFnName) => {\n  filterPropsMapping[styleFnName].forEach(propName => {\n    acc[propName] = styleFunctionMapping[styleFnName];\n  });\n  return acc;\n}, {});\n\nfunction getThemeValue(prop, value, theme) {\n  const inputProps = {\n    [prop]: value,\n    theme\n  };\n  const styleFunction = propToStyleFunction[prop];\n  return styleFunction ? styleFunction(inputProps) : {\n    [prop]: value\n  };\n}\n\nexport default getThemeValue;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nexport function isPlainObject(item) {\n  return item !== null && typeof item === 'object' && item.constructor === Object;\n}\nexport default function deepmerge(target, source, options = {\n  clone: true\n}) {\n  const output = options.clone ? _extends({}, target) : target;\n\n  if (isPlainObject(target) && isPlainObject(source)) {\n    Object.keys(source).forEach(key => {\n      // Avoid prototype pollution\n      if (key === '__proto__') {\n        return;\n      }\n\n      if (isPlainObject(source[key]) && key in target && isPlainObject(target[key])) {\n        // Since `output` is a clone of `target` and we have narrowed `target` in this block we can cast to the same type.\n        output[key] = deepmerge(target[key], source[key], options);\n      } else {\n        output[key] = source[key];\n      }\n    });\n  }\n\n  return output;\n}"],"names":["filterPropsMapping","borders","display","flexbox","grid","positions","palette","shadows","sizing","spacing","typography","styleFunctionMapping","Object","keys","reduce","acc","styleFnName","forEach","propName","isPlainObject","item","constructor","deepmerge","target","source","options","clone","output","_extends","key"],"sourceRoot":""}